SET-3. Write a Socket program: Client Request – Server sends its IP ADDRESS using TCP/UDP protocol

Ans: -
--------------------------------------------------------

To perform this at first, we have to create two separate Java files on our directory one for Server and
other one for the Client with the help of ‘vim’ editor. Then we can write the code to setup
TCPIPAddressServer and TCPIPAddressClient locally.


TCPIPAddressServer:
--------------------------------------------------------

import java.io.*;
import java.net.*;
public class TCPIPAddressServer {
 public static void main(String[] args) {
 try (ServerSocket serverSocket = new ServerSocket(6789)) {
 System.out.println("Server is listening on port 6789");
 while (true) {
 new IPAddressServerThread(serverSocket.accept()).start();
 }
 } catch (IOException ex) {
 System.out.println("Server exception: " + ex.getMessage());
 ex.printStackTrace();
 }
 }
}
class IPAddressServerThread extends Thread {
 private Socket socket;
 public IPAddressServerThread(Socket socket) {
 this.socket = socket;
 }
 public void run() {
 try (OutputStream output = socket.getOutputStream();
 PrintWriter writer = new PrintWriter(output, true)) {
 InetAddress serverAddress = socket.getLocalAddress();
 String ipAddress = serverAddress.getHostAddress();
 System.out.println("Client connected, sending IP address: " + ipAddress);
 writer.println(ipAddress);
 } catch (IOException ex) {
 System.out.println("Server thread exception: " + ex.getMessage());
 ex.printStackTrace();
 }
 }
}

TCPIPAddressClient:
-----------------------------------------------------


import java.io.*;
import java.net.*;
public class TCPIPAddressClient {
 public static void main(String[] args) {
 String hostname = "localhost";
 int port = 6789;
 try (Socket socket = new Socket(hostname, port);
 InputStream input = socket.getInputStream();
 BufferedReader reader = new BufferedReader(new InputStreamReader(input))) {
 String ipAddress = reader.readLine();
 System.out.println("Server's IP address: " + ipAddress);
 } catch (UnknownHostException ex) {
 System.out.println("Server not found: " + ex.getMessage());
 } catch (IOException ex) {
 System.out.println("I/O error: " + ex.getMessage());
 }
 }
}


OUTPUT:
---------------------------------------------------

https://i.postimg.cc/K8JDYnQz/image-1.png